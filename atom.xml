<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Maciej Kus is not a Figure Skater]]></title>
  <link href="http://maciejkus.com/atom.xml" rel="self"/>
  <link href="http://maciejkus.com/"/>
  <updated>2015-09-05T16:51:18-07:00</updated>
  <id>http://maciejkus.com/</id>
  <author>
    <name><![CDATA[Maciej Kus]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[memoization]]></title>
    <link href="http://maciejkus.com/blog/2015/08/21/memoization/"/>
    <updated>2015-08-21T13:59:37-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/21/memoization</id>
    <content type="html"><![CDATA[<p>It&rsquo;s pretty amazing how much faster caching makes code. I was doing a CodeWars exercise trying to go through an array and find the first (left most) pair of numbers which add up to a given sum (<code>s</code>). I first tried:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>  for(var i = 1, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    for (var x = 0; x &lt; i; x++) {
</span><span class='line'>      if(ints[i] + ints[x] === s) return [ints[x],ints[i]];
</span><span class='line'>    }
</span><span class='line'>  }   
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Pretty self explanatory, it goes through the array and for every number goes through all the numbers before that one to see if they add up to the sum. It works, but was too slow and timed out when the array was huge.</p>

<p>I tried to speed things up a bit by using indexOf() rather than a second for loop, but that actually slowed things down, as indexOf() is like a loop, but with a bunch of checks included in it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>  for(var i = 1, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    var otherIndex = ints.indexOf(s - ints[i])
</span><span class='line'>    if(otherIndex &gt; -1 && otherIndex &lt; i) return [(s - ints[i]),ints[i]];
</span><span class='line'>  }   
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>I then thought about caching or memoization, and that is where the solution lay. Basically, the trick is to create a JavaScript object which holds all the values which have already been seen in the <code>ints</code> array.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>//variable to hold numbers already checked
</span><span class='line'>var cached = {};
</span><span class='line'>  for(var i = 0, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    var num = ints[i];
</span><span class='line'>    //the value needed to form a pair
</span><span class='line'>    var num2 = s - num;
</span><span class='line'>    //if have seen num2 already 
</span><span class='line'>    //then this is the answer
</span><span class='line'>    if(num2 in cached) {
</span><span class='line'>      return [num2,num];
</span><span class='line'>    //add num2 to cache
</span><span class='line'>    } else {
</span><span class='line'>      cached[num] = 1;
</span><span class='line'>    }
</span><span class='line'>  }   
</span><span class='line'>  //no pair found
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tdee-calculator]]></title>
    <link href="http://maciejkus.com/blog/2015/08/16/tdee-calculator/"/>
    <updated>2015-08-16T16:43:58-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/16/tdee-calculator</id>
    <content type="html"><![CDATA[<p>A <a href="http://smoothiegains.com/tdee-and-bmr-calculator/">TDEE and BMR calculator</a> helps measure how many calories are needed to gain or lose weight. The inputs include exercise levels, age and body description.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jsbreakouts]]></title>
    <link href="http://maciejkus.com/blog/2015/08/11/jsbreakouts/"/>
    <updated>2015-08-11T09:12:00-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/11/jsbreakouts</id>
    <content type="html"><![CDATA[<p>There&rsquo;s a project, JavaScript <a href="http://www.jsbreakouts.org/">Breakouts</a> which is a collection of different JavaScript game engines. All the game engines are used to create the same version of Breakout, with the same features, etc. It&rsquo;s a way to allow people to compare different game engines by looking at them in action.</p>

<p>Since I&rsquo;ve used enchant.js before, I figured I would add an enchant.js version to the Breakouts. The game can be played <a href="http://www.jsbreakouts.org/enchantjs/index.html">here</a>. Coding this game I realized that enchant.js is out of date. The last time it has been updated was around 2013. There was one <a href="https://github.com/wise9/enchant.js/issues/312">issue</a> where I actually had to go in and change the code for enchant.js to make the game work. There is an outdated web audio line:</p>

<p><code>this.src.disconnect(this.connectTarget);</code></p>

<p>This caused Chrome and other webkit based browsers to issue a</p>

<p><code>Uncaught InvalidAccessError: Failed to execute 'disconnect' on 'AudioNode': the given destination is not connected.</code></p>

<p>error. This was fixed by changing the above line to</p>

<p><code>this.src.disconnect();</code></p>

<p>Before this change, the game would crash as soon as a sound was played. I see there are other issues with enchant.js. On older versions of Firefox the game does not finish loading. Instead it throws a</p>

<p><code>Error: failed in Deferred</code></p>

<p>error. It&rsquo;s unfortunate, but it seems like enchant.js is no longer being maintained, and so I will have to find a new game engine to use, if I ever decide to use a game engine for a game.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Canvas Breakout]]></title>
    <link href="http://maciejkus.com/blog/2015/08/04/canvas-breakout/"/>
    <updated>2015-08-04T09:24:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/04/canvas-breakout</id>
    <content type="html"><![CDATA[<p>Continuing with the Canvas/JavaScript game theme that I&rsquo;ve been on recently, I just coded a game of <a href="http://maciejkus.com/breakout/">Breakout</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Canvas/HTML5 Tower Defense]]></title>
    <link href="http://maciejkus.com/blog/2015/07/06/canvas-tower-defense/"/>
    <updated>2015-07-06T17:30:41-07:00</updated>
    <id>http://maciejkus.com/blog/2015/07/06/canvas-tower-defense</id>
    <content type="html"><![CDATA[<p>I made a fairly simply tower defense game in html5/canvas/javascript. It works fine as is. Most of the features I would want to create are there, the game just needs some work on the actual game play. Details like the cost of towers, and how rapid the attackers are spawned will probably need to be changed to make the game more enjoyable. The current version works well enough to play.</p>

<p>Check it out at <a href="http://maciejkus.com/tower/">http://maciejkus.com/tower/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[snake]]></title>
    <link href="http://maciejkus.com/blog/2015/06/26/snake/"/>
    <updated>2015-06-26T15:20:57-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/26/snake</id>
    <content type="html"><![CDATA[<p>Snake, the classic game, now in html5/Canvas: <a href="http://maciejkus.com/snake/">http://maciejkus.com/snake/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unit-vector-eyes-follow-mouse]]></title>
    <link href="http://maciejkus.com/blog/2015/06/23/unit-vector-eyes-follow-mouse/"/>
    <updated>2015-06-23T17:11:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/23/unit-vector-eyes-follow-mouse</id>
    <content type="html"><![CDATA[<p>A unit vector or normal vector is useful for pointing things at other things. Like pointing eyes at a mouse. See here what a unit vector is:
<a href="https://en.wikipedia.org/wiki/Unit_vector">https://en.wikipedia.org/wiki/Unit_vector</a></p>

<p>and then check out <a href="http://maciejkus.com/unit-vector-eyes/">http://maciejkus.com/unit-vector-eyes/</a> to see some html5/canvas eyes which follow your mouse cursor. They currently only follow the mouse when it is inside the canvas element, but this can easily be changed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[angular_forum]]></title>
    <link href="http://maciejkus.com/blog/2015/06/22/angular-forum/"/>
    <updated>2015-06-22T14:46:04-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/22/angular-forum</id>
    <content type="html"><![CDATA[<p>Welp, I made a simple forum using angularJS. This is a lot more of what angular was meant to do than that baseball game I made a bit ago. It&rsquo;s a simple single page app. I did not create any backend functionality to save the posts or anything like that, partly because it is just an exercise, and partly because github   pages do not have backend access.</p>

<!--more-->


<p>You can see it at <a href="http://maciejkus.com/angular-forum/">http://maciejkus.com/angular-forum/</a>
You can make new posts, you can click on a username to see post titles made by that user. Nothing too fancy but it covers a lot of angular ideas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[box_whiskers_calc]]></title>
    <link href="http://maciejkus.com/blog/2015/06/20/box-whiskers-calc/"/>
    <updated>2015-06-20T12:30:32-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/20/box-whiskers-calc</id>
    <content type="html"><![CDATA[<p> There is a shocking lack of box and whisker graph calculators on the Internet. Well, accurate ones anyway, so I made one. Originally I needed one for some calculations I was doing and made one in Python, but then I figured I can easily rewrite it into Javascript and make it available for others. I even added a simple HTML5 canvas graph. You can find it at <a href="http://maciejkus.com/box_whiskers/">Box and Whiskers Calculator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[angular-baseball-game]]></title>
    <link href="http://maciejkus.com/blog/2015/06/05/angular-baseball-game/"/>
    <updated>2015-06-05T12:40:07-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/05/angular-baseball-game</id>
    <content type="html"><![CDATA[<p>Inspired by a Codewars kata I created a simple <a href="http://maciejkus.com/baseball-game/">baseball game</a>. It was the first time I used AngularJS, but I feel like the Angular was unnecessary. I will need to build a few other pages to get the full idea of Angular.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bicycle or Walk]]></title>
    <link href="http://maciejkus.com/blog/2015/05/26/bicycle-or-walk/"/>
    <updated>2015-05-26T14:40:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/26/bicycle-or-walk</id>
    <content type="html"><![CDATA[<p>Playing around with Bootstrap a tiny bit more I made a little <a href="http://maciejkus.com/bike-drive/">bicycle versus driving</a> app. It&rsquo;s pretty simple in terms of the data that is shows. I used google maps and tabs, which do not get along very well, but luckily others have run into this problem in the past and there is a fair amount of recommendations out there.</p>

<!-- more -->


<p>My app was unique because I use two separate tabs for two separate maps, and I want to load dynamic directions when the maps are presented. All the existing code I found only focused on a single map which did not have directions on it. After a bit, I was able to make things work the way I wanted them to.</p>

<p>I also used an API feed from myGasFeed.com. Playing with two separate APIs was a nice reminder of the asynchronous nature of AJAX.</p>

<p>I feel really comfortable with Bootstrap at this point. Time to find something new to experiment with?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[asset allocation bootstrap]]></title>
    <link href="http://maciejkus.com/blog/2015/05/16/asset-allocation-bootstrap/"/>
    <updated>2015-05-16T10:39:03-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/16/asset-allocation-bootstrap</id>
    <content type="html"><![CDATA[<p>Another bootstrap project is the <a href='http://maciejkus.com/asset-allocation/'>asset allocation calculator</a> I created. The JavaScript is mostly simple math and there&rsquo;s some jQuery to create and remove fields. Thanks to bootstrap the page is responsive, works well across browsers and looks pretty.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Star Wars Crawler]]></title>
    <link href="http://maciejkus.com/blog/2015/05/09/star-wars-crawler/"/>
    <updated>2015-05-09T15:08:23-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/09/star-wars-crawler</id>
    <content type="html"><![CDATA[<p>Inspired by <a href="http://www.sitepoint.com/css3-starwars-scrolling-text/">http://www.sitepoint.com/css3-starwars-scrolling-text/</a> I created A Star Wars themed &lsquo;about&rsquo; page. See it here: <a href="http://maciejkus.com/starwars/">http://maciejkus.com/starwars/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap is the best]]></title>
    <link href="http://maciejkus.com/blog/2015/04/28/bootstrap/"/>
    <updated>2015-04-28T15:35:33-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/28/bootstrap</id>
    <content type="html"><![CDATA[<p>I took a quick little Bootstrap course online through edx. I then made a simple little band website using Bootstrap here: <a href="http://maciejkus.com/we-are-the-best/">We are the Best</a>. It is a fan site for the punk rock band in the Swedish film <em>We are the Best</em>. Practice Practice Practice, it&rsquo;s all one can do to learn.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Design]]></title>
    <link href="http://maciejkus.com/blog/2015/04/25/responsive-design/"/>
    <updated>2015-04-25T15:16:46-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/25/responsive-design</id>
    <content type="html"><![CDATA[<p>Responsive design in the idea that a webpage will respond to and accommodate the width of a browser. What this means is that if you are looking at a website on a small screen, such as those found in smart phones, the page will adjust to fit that small screen. Usually things that happen is the line height and font increase and the layout of the page becomes more vertical. Elements line up on top of one another rather than to the left or right of one another.</p>

<p>My job&rsquo;s main webpage was designed years ago, well before mobile phones were widely used to browse the Internet. The webpage still works fine and the belief is that there is little reason to change the site. All the information that customers and potential customers may need can be easily found. However, up until a week ago the site looked pretty terrible on mobile devices. This was a problem, especially since Google was going to start punishing non-mobile friendly sites in its search results.</p>

<p>I took a look at the existing CSS and realized I can make the site responsive. So I added some CSS media queries, removed some inline CSS, changed a tiny bit of html, and bam! Now on a desktop or wider screen the site looks exactly like it used to, but on a smaller screen or on a mobile phone the layout of the site is a lot more vertical and user friendly.</p>

<!--more-->


<p>Making an existing page responsive is not too difficult. Most of the challenge revolves around understanding the existing CSS. First you want to understand what the page is doing and why it is doing it, and then you will be able to move elements around without breaking everything. The basic ideas are, make lots of elements have a width of 100%. This ensures elements are stacked vertically. Be sure to keep line heights larger than you would on a desktop, this is especially true for links. Hard to press links create a crummy user experience. &lsquo;Max-width&rsquo; is your friend. This is especially true for images.</p>

<p>I didn&rsquo;t want to touch the existing HTML when I could help it, but there were a couple things I just couldn&rsquo;t help but touch up. On one page there was an empty table element which was used to create whitespace. I was easily able to remove this element and add the whitespace with CSS. It is considered best practice to separate the content of a page (HTML) from the design of the page (CSS). I also had to add a couple of classes to some HTML elements, but that doesn&rsquo;t affect anything in terms of the way the page looks.</p>

<p>It was a neat little project, working with HTML and CSS that I originally had nothing to do with and trying to make the page work great on small screens while not changing anything on the desktop version. I remember the first time I tried to do anything with CSS I hated it, but now I realize that was because I was unfamiliar with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux is cool]]></title>
    <link href="http://maciejkus.com/blog/2015/04/13/linux-is-cool/"/>
    <updated>2015-04-13T14:46:23-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/13/linux-is-cool</id>
    <content type="html"><![CDATA[<p>I like wget and sed. Want to download a whole website?</p>

<pre><code>wget -r --no-parent http://example.com/
</code></pre>

<p>Want to insert the test of input.txt after the head tag into all html files?</p>

<pre><code>sed -i '/&lt;head&gt;/r input.txt' *.html
</code></pre>

<p>Tools like these make life so easy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Site]]></title>
    <link href="http://maciejkus.com/blog/2015/04/04/new-site/"/>
    <updated>2015-04-04T15:08:12-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/04/new-site</id>
    <content type="html"><![CDATA[<p>So I&rsquo;m playing with Wordpress for a <a href="http://smoothiegains.com/">smoothie and fitness</a> site. I do love drinking smoothies so it should be fun to post some of my favorite recipes on there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Giving Hexo a Try]]></title>
    <link href="http://maciejkus.com/blog/2015/02/28/giving-hexo-a-try/"/>
    <updated>2015-02-28T13:17:36-08:00</updated>
    <id>http://maciejkus.com/blog/2015/02/28/giving-hexo-a-try</id>
    <content type="html"><![CDATA[<p>I&rsquo;m building a new website using Hexo, a javascript based static site generator.  This blog runs using Octopress, which is OK, but I don&rsquo;t know anything about Ruby and generating content seems to take longer than I would like. The author of Octopress isn&rsquo;t very <a href="http://octopress.org/2015/01/15/octopress-3.0-is-coming/">happy</a> with where the platform currently is and is rewriting it. So I figure it&rsquo;s a great time to try something new.</p>

<!--more-->


<p>I chose Hexo largely because it is written in Javascript and because it has some nice themes made and ready to go. Well, I am still customizing the theme I chose, but it&rsquo;s less work to edit an existing theme than start one up from scratch. Having dealt with Octopress I am somewhat used to a static blogging platform and for the most part things aren&rsquo;t all that different. I&rsquo;m using markdown for the first time ever, and boy is it nice. It&rsquo;s one of those things where I&rsquo;d rather start with HTML and then once I understand it try markdown in the same way I would rather learn vanilla Javascript before playing with jQuery or a framework. It&rsquo;s nice knowing what is going on &lsquo;under the hood&rsquo;. I&rsquo;m also going to get more familiar with EJS because that is what much of the theme I am working with is written in. It&rsquo;s a bit confusing at first glance, but I bet, like markdown will make sense and make life easier.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[128 VPS]]></title>
    <link href="http://maciejkus.com/blog/2015/02/21/128-vps/"/>
    <updated>2015-02-21T14:40:30-08:00</updated>
    <id>http://maciejkus.com/blog/2015/02/21/128-vps</id>
    <content type="html"><![CDATA[<p>
I have my first VPS. It&#8217;s a tiny 128mb RAM VPS which costs me a whooping $15 a year. Not too bad. I will be hosting a few static websties on it. These are CSS/HTML/JavaScript only sites. No database, no php, no backend. So unless traffic levels get crazy, a 128mb VPS should be fine. I setup a minimal 32-bit version of Debian on it and was ready to go.
</p>


<!-- more -->


<p>
The first thing I did was disable root ssh login and create a new user. I also went ahead and changed the default SSH port and installed fail2ban to avoid SSH attacks. I also setup [automatic](http://www.the-art-of-web.com/system/cron-apt-wheezy/) security updates using a cronjob. I figure this is enough security that the server will need. fail2ban takes about 3-4 mb of RAM, so I still have plenty left for webhosting.
</p>


<p>
I then installed nginx and set it up to accommodate my little server. Since I only have one CPU, I set &#8216;worker_processes&#8217; to 1, &#8216;worker_connections&#8217; to 1024, and lowered the timout to 25 seconds. I also setup client caching of all CSS, JS, and image files. Finally I also turned &#8216;gzip_static&#8217; on, which allows pre-zipped files to be sent out by the server. This means if a file is gzipped before hand the server does not use CPU to gzip that file. I gzipped all my .html and .js files and kept both the original and the new .gz files in the  same directory. 
</p>


<p>If a .gz file does not exist, nginx will gzip the original file (.html for example) using up CPU resources to do so. However, if nginx sees both index.html and index.html.gz it will server up index.html.gz instead. The one gotcha is that every time you make a change to the .html file you will need to update the .html.gz file also. Apparently nginx also likes the original and the gzipped files to have the same time stamp, so once all the files were ready to go I has to &#8216;touch *&#8217; to give them all the same time stamp.
</p>


<p>The site that I have running on the VPS gets over 1,000 page views a day and the load and memory usage on the server is tiny. I can easily add other static sites to the server, or increase the amount of traffic to the server without and problems. Now I have a fun little virtual server to play with.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Most Accurate Bandwidth Speed Test]]></title>
    <link href="http://maciejkus.com/blog/2015/01/11/most-accurate-bandwidth-speed-test/"/>
    <updated>2015-01-11T17:02:51-08:00</updated>
    <id>http://maciejkus.com/blog/2015/01/11/most-accurate-bandwidth-speed-test</id>
    <content type="html"><![CDATA[<p>There&#8217;s a lot of different sites which attempt to test home Internet speed, and they are all notoriously inaccurate. These different speed test&#8217;s usually run in your browser and are based on a flash or html5 program. They are designed for common Internet users and have a goal of making money through advertising or selling of certain Internet services. They claim to test your home&#8217;s connection speed, but are actually testing the speed between your home and their server. The results should be taken with a grain of salt, especially when testing speeds over 100Mbps. </p>


<!-- more -->


<p>Rather than rely on a browser based Internet speed test, to find a truly accurate reading of how fast your connection is, you should use a tool such as <a href="https://iperf.fr/">iperf</a>. This is a command line program available for all major operating systems. The program is not run in your browser, so the test results do not depend on the speed of flash or html5 or your browser. The most basic way to run iperf is simply
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER</span></code></pre></td></tr></table></div></figure>
Where SERVER is the IP address or URL of an iperf server you are testing to. You need both, a client computer you are testing from, and a server computer you are testing to. This may seem like a bit more work than simply going to a web-based speed test, but being able to specify a client and server allows you to specify exactly what connection you are testing. An online speed test can tell you how fast your connected is to some random server, but a connection to a different location is going to be at a totally different speed. On the server computer run
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -s</span></code></pre></td></tr></table></div></figure>
to start the iperf server. </p>




<p>It is better to test over a bit of time and find the average of those times. To do this run
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-w' flag.
</span><span class='line'>iperf -c SERVER -t30 -i1</span></code></pre></td></tr></table></div></figure>
The -t30 tells iperf to run for 30 seconds and the -i1 tells iperf to report back every one second. Running a bandwidth speed test over numerous seconds makes sure that a single moment of congestion or above average speed does not provide a misleading report. Another thing to try is adding multiple connections at once. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER -t30 -i1 -P10</span></code></pre></td></tr></table></div></figure>
The -P10 tells iperf to run 10 simultaneous connection tests at once, and then iperf sums those up. This summed result should be close to the same as a single connection&#8217;s result. If there is a large difference, then there may be a issue with the network connection or with the computer settings. Another thing to try is manually changing the TCP window size. Iperf attempts to select a window size based on the operating system, as different operating systems have different limits. To see if an issue is being caused by TCP window size you can manually set window sizes using the &#8216;-w&#8217; flag.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER -w 64kb</span></code></pre></td></tr></table></div></figure>
The above will use a window size of 64kb.</p>


<p>To see how browser based speed tests do, I tested my 100mbps connection on a number of different sites, and also using iperf. First, the iperf result of testing to a server in the same location as I am in (but across 2 routers) which I know can handle over 100Mbps of traffic:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER 
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to SERVER, TCP port 5001
</span><span class='line'>TCP window size: 96.7 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 48516 connected with 192.168.227.10 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec   105 MBytes  87.7 Mbits/sec</span></code></pre></td></tr></table></div></figure>
The above shows that iperf transfered 105 Megabytes at an average speed of 87.7Mbits/second. This sounds about right for a 100Mbps connection. I ran the test a few times using a few different options, such as multiple connections at once, and the results were all about the same, every time. Because this test is to a close iperf server, it is going to be the most accurate in telling me what my bandwidth limit is where I currently am. All other delays in bandwidth are going to be as a result of having to travel further across the world or across more routing equipment. I then ran a test to Standford&#8217;s public iperf server:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c netspeed1.stanford.edu
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to netspeed1.stanford.edu, TCP port 5001
</span><span class='line'>TCP window size: 96.7 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 60027 connected with 171.66.6.38 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec  91.5 MBytes  76.6 Mbits/sec</span></code></pre></td></tr></table></div></figure>
Stanford is in Norther California, as am I, and the connection between us us around 76.6 Mbits/sec. I again ran this a few times and the results were always within a 3Mbps range. Already the limit of the connection is being slowed down due to the data having to travel a longer path.<br>
Most speed test users are trying to find the speed of their local connection, so the best thing to do is to test as close to that connection as possible. To finally prove this point I test to a public server in Estonia:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c iperf.eenet.ee
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to iperf.eenet.ee, TCP port 5001
</span><span class='line'>TCP window size: 23.5 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 55661 connected with 193.40.100.7 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec  32.6 MBytes  27.3 Mbits/sec</span></code></pre></td></tr></table></div></figure>
Obviously the above is not telling me that my bandwidth is only 27.3Mbps, but that the transfer speed between me and the Estonian server is maxing out at 27.3Mbps. This illustrates that iperf allows testing of both local connections and global connections between two points.
 </p>


<p><p>Now let&rsquo;s see how browser based speed tests did. First I tried what seems to be the most popular speed test site, speedtest.net. The result? A download speed of 25.37 Mbps and upload of 68.95 Mbps. I&rsquo;m pretty shocked at how low speedtest.net claims my download speed it. I ran the test a second time a few minutes later and got a slightly better reading of 62.28 Mbps download and 66.66 Mbps upload, but this is still about 20Mbps less than what a local iperf test was able to reach. If I didn&rsquo;t know any better, I might believe that my home Internet connection reached only around 65Mbps.<br>
I then tried testmy.net, which claims to be better due to not relying on flash, which it (correctly) claims may affect the results of any bandwidth test. The results however were even worse than speedstest.net&rsquo;s! I received a download speed of 68.8 Mbps and a very slow upload speed claim of 17.8 Mbps. Running the test a second time showed a similar download speed of 63.3 Mbps and an upload speed of 36.8Mbps. If the site is to be believed, my unchanged connection somehow doubled it&rsquo;s upload speed.<br>
<p>Finally, I tried speedof.me. It claimed a download speed of 61.44 Mbps and upload of 65.3 Mbps. A second test a few minutes later showed a download speed of 31.49 Mpbs and a upload of 60.64Mbps. Their server is located in San Jose California, about the same distance as Standford. Again, wildly differing results.</p>
<p>These browser speed tests show a variety of results, while iperf shows pretty much the same values run every singe time. With iperf I can setup a server close enough to me to know that my actual connection is being test, and that the results are not lowered due to geographic distance, a flash program, or an unknown proprietary methodology. Iperf also allows me to check the transfer rate between me and specific locations around the world.</p></p>
]]></content>
  </entry>
  
</feed>
