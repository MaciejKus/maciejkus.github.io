<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Maciej Kus is not a Figure Skater]]></title>
  <link href="http://maciejkus.com/atom.xml" rel="self"/>
  <link href="http://maciejkus.com/"/>
  <updated>2015-03-10T09:31:29-07:00</updated>
  <id>http://maciejkus.com/</id>
  <author>
    <name><![CDATA[Maciej Kus]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Giving Hexo a Try]]></title>
    <link href="http://maciejkus.com/blog/2015/02/28/giving-hexo-a-try/"/>
    <updated>2015-02-28T13:17:36-08:00</updated>
    <id>http://maciejkus.com/blog/2015/02/28/giving-hexo-a-try</id>
    <content type="html"><![CDATA[<p>I&rsquo;m building a new website using Hexo, a javascript based static site generator.  This blog runs using Octopress, which is OK, but I don&rsquo;t know anything about Ruby and generating content seems to take longer than I would like. The author of Octopress isn&rsquo;t very <a href="http://octopress.org/2015/01/15/octopress-3.0-is-coming/">happy</a> with where the platform currently is and is rewriting it. So I figure it&rsquo;s a great time to try something new.</p>

<!--more-->


<p>I chose Hexo largely because it is written in Javascript and because it has some nice themes made and ready to go. Well, I am still customizing the theme I chose, but it&rsquo;s less work to edit an existing theme than start one up from scratch. Having dealt with Octopress I am somewhat used to a static blogging platform and for the most part things aren&rsquo;t all that different. I&rsquo;m using markdown for the first time ever, and boy is it nice. It&rsquo;s one of those things where I&rsquo;d rather start with HTML and then once I understand it try markdown in the same way I would rather learn vanilla Javascript before playing with jQuery or a framework. It&rsquo;s nice knowing what is going on &lsquo;under the hood&rsquo;. I&rsquo;m also going to get more familiar with EJS because that is what much of the theme I am working with is written in. It&rsquo;s a bit confusing at first glance, but I bet, like markdown will make sense and make life easier.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[128 VPS]]></title>
    <link href="http://maciejkus.com/blog/2015/02/21/128-vps/"/>
    <updated>2015-02-21T14:40:30-08:00</updated>
    <id>http://maciejkus.com/blog/2015/02/21/128-vps</id>
    <content type="html"><![CDATA[<p>
I have my first VPS. It&#8217;s a tiny 128mb RAM VPS which costs me a whooping $15 a year. Not too bad. I will be hosting a few static websties on it. These are CSS/HTML/JavaScript only sites. No database, no php, no backend. So unless traffic levels get crazy, a 128mb VPS should be fine. I setup a minimal 32-bit version of Debian on it and was ready to go.
</p>


<!-- more -->


<p>
The first thing I did was disable root ssh login and create a new user. I also went ahead and changes the default SSH port and installed fail2ban to avoid SSH attacks. I also setup automatic security updates using a cronjob. I figure this is enough security that the server will need. fail2ban takes about 3-4 mb of RAM, so I still have plenty left for webhosting.
</p>


<p>
I then installed nginx and set it up to accommodate my little server. Since I only have one CPU, I set &#8216;worker_processes&#8217; to 1, &#8216;worker_connections&#8217; to 1024, and lowered the timout to 25 seconds. I also setup client caching of all CSS, JS, and image files. Finally I also turned &#8216;gzip_static&#8217; on, which allows pre-zipped files to be sent out by the server. This means if a file is gzipped before hand the server does not use CPU to gzip that file. I gzipped all my .html and .js files and kept both the original and the new .gz files in the  same directory. 
</p>


<p>If a .gz file does not exist, nginx will gzip the original file (.html for example) using up CPU resources to do so. However, if nginx sees both index.html and index.html.gz it will server up index.html.gz instead. The one gotcha is that every time you make a change to the .html file you will need to update the .html.gz file also. Apparently nginx also likes the original and the gzipped files to have the same time stamp, so once all the files were ready to go I has to &#8216;touch *&#8217; to give them all the same time stamp.
</p>


<p>The site that I have running on the VPS gets over 1,000 page views a day and the load and memory usage on the server is tiny. I can easily add other static sites to the server, or increase the amount of traffic to the server without and problems. Now I have a fun little virtual server to play with.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Most Accurate Bandwidth Speed Test]]></title>
    <link href="http://maciejkus.com/blog/2015/01/11/most-accurate-bandwidth-speed-test/"/>
    <updated>2015-01-11T17:02:51-08:00</updated>
    <id>http://maciejkus.com/blog/2015/01/11/most-accurate-bandwidth-speed-test</id>
    <content type="html"><![CDATA[<p>There&#8217;s a lot of different sites which attempt to test home Internet speed, and they are all notoriously inaccurate. These different speed test&#8217;s usually run in your browser and are based on a flash or html5 program. They are designed for common Internet users and have a goal of making money through advertising or selling of certain Internet services. They claim to test your home&#8217;s connection speed, but are actually testing the speed between your home and their server. The results should be taken with a grain of salt, especially when testing speeds over 100Mbps. </p>


<!-- more -->


<p>Rather than rely on a browser based Internet speed test, to find a truly accurate reading of how fast your connection is, you should use a tool such as <a href="https://iperf.fr/">iperf</a>. This is a command line program available for all major operating systems. The program is not run in your browser, so the test results do not depend on the speed of flash or html5 or your browser. The most basic way to run iperf is simply
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER</span></code></pre></td></tr></table></div></figure>
Where SERVER is the IP address or URL of an iperf server you are testing to. You need both, a client computer you are testing from, and a server computer you are testing to. This may seem like a bit more work than simply going to a web-based speed test, but being able to specify a client and server allows you to specify exactly what connection you are testing. An online speed test can tell you how fast your connected is to some random server, but a connection to a different location is going to be at a totally different speed. On the server computer run
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -s</span></code></pre></td></tr></table></div></figure>
to start the iperf server. </p>




<p>It is better to test over a bit of time and find the average of those times. To do this run
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-w' flag.
</span><span class='line'>iperf -c SERVER -t30 -i1</span></code></pre></td></tr></table></div></figure>
The -t30 tells iperf to run for 30 seconds and the -i1 tells iperf to report back every one second. Running a bandwidth speed test over numerous seconds makes sure that a single moment of congestion or above average speed does not provide a misleading report. Another thing to try is adding multiple connections at once. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER -t30 -i1 -P10</span></code></pre></td></tr></table></div></figure>
The -P10 tells iperf to run 10 simultaneous connection tests at once, and then iperf sums those up. This summed result should be close to the same as a single connection&#8217;s result. If there is a large difference, then there may be a issue with the network connection or with the computer settings. Another thing to try is manually changing the TCP window size. Iperf attempts to select a window size based on the operating system, as different operating systems have different limits. To see if an issue is being caused by TCP window size you can manually set window sizes using the &#8216;-w&#8217; flag.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER -w 64kb</span></code></pre></td></tr></table></div></figure>
The above will use a window size of 64kb.</p>


<p>To see how browser based speed tests do, I tested my 100mbps connection on a number of different sites, and also using iperf. First, the iperf result of testing to a server in the same location as I am in (but across 2 routers) which I know can handle over 100Mbps of traffic:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c SERVER 
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to SERVER, TCP port 5001
</span><span class='line'>TCP window size: 96.7 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 48516 connected with 192.168.227.10 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec   105 MBytes  87.7 Mbits/sec</span></code></pre></td></tr></table></div></figure>
The above shows that iperf transfered 105 Megabytes at an average speed of 87.7Mbits/second. This sounds about right for a 100Mbps connection. I ran the test a few times using a few different options, such as multiple connections at once, and the results were all about the same, every time. Because this test is to a close iperf server, it is going to be the most accurate in telling me what my bandwidth limit is where I currently am. All other delays in bandwidth are going to be as a result of having to travel further across the world or across more routing equipment. I then ran a test to Standford&#8217;s public iperf server:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c netspeed1.stanford.edu
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to netspeed1.stanford.edu, TCP port 5001
</span><span class='line'>TCP window size: 96.7 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 60027 connected with 171.66.6.38 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec  91.5 MBytes  76.6 Mbits/sec</span></code></pre></td></tr></table></div></figure>
Stanford is in Norther California, as am I, and the connection between us us around 76.6 Mbits/sec. I again ran this a few times and the results were always within a 3Mbps range. Already the limit of the connection is being slowed down due to the data having to travel a longer path.<br>
Most speed test users are trying to find the speed of their local connection, so the best thing to do is to test as close to that connection as possible. To finally prove this point I test to a public server in Estonia:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iperf -c iperf.eenet.ee
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Client connecting to iperf.eenet.ee, TCP port 5001
</span><span class='line'>TCP window size: 23.5 KByte (default)
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>[  3] local 10.255.251.164 port 55661 connected with 193.40.100.7 port 5001
</span><span class='line'>[ ID] Interval       Transfer     Bandwidth
</span><span class='line'>[  3]  0.0-10.0 sec  32.6 MBytes  27.3 Mbits/sec</span></code></pre></td></tr></table></div></figure>
Obviously the above is not telling me that my bandwidth is only 27.3Mbps, but that the transfer speed between me and the Estonian server is maxing out at 27.3Mbps. This illustrates that iperf allows testing of both local connections and global connections between two points.
 </p>


<p><p>Now let&rsquo;s see how browser based speed tests did. First I tried what seems to be the most popular speed test site, speedtest.net. The result? A download speed of 25.37 Mbps and upload of 68.95 Mbps. I&rsquo;m pretty shocked at how low speedtest.net claims my download speed it. I ran the test a second time a few minutes later and got a slightly better reading of 62.28 Mbps download and 66.66 Mbps upload, but this is still about 20Mbps less than what a local iperf test was able to reach. If I didn&rsquo;t know any better, I might believe that my home Internet connection reached only around 65Mbps.<br>
I then tried testmy.net, which claims to be better due to not relying on flash, which it (correctly) claims may affect the results of any bandwidth test. The results however were even worse than speedstest.net&rsquo;s! I received a download speed of 68.8 Mbps and a very slow upload speed claim of 17.8 Mbps. Running the test a second time showed a similar download speed of 63.3 Mbps and an upload speed of 36.8Mbps. If the site is to be believed, my unchanged connection somehow doubled it&rsquo;s upload speed.<br>
<p>Finally, I tried speedof.me. It claimed a download speed of 61.44 Mbps and upload of 65.3 Mbps. A second test a few minutes later showed a download speed of 31.49 Mpbs and a upload of 60.64Mbps. Their server is located in San Jose California, about the same distance as Standford. Again, wildly differing results.</p>
<p>These browser speed tests show a variety of results, while iperf shows pretty much the same values run every singe time. With iperf I can setup a server close enough to me to know that my actual connection is being test, and that the results are not lowered due to geographic distance, a flash program, or an unknown proprietary methodology. Iperf also allows me to check the transfer rate between me and specific locations around the world.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IPv6 Packet Tracer Bug]]></title>
    <link href="http://maciejkus.com/blog/2014/12/07/ipv6-packet-tracer-bug/"/>
    <updated>2014-12-07T14:46:08-08:00</updated>
    <id>http://maciejkus.com/blog/2014/12/07/ipv6-packet-tracer-bug</id>
    <content type="html"><![CDATA[<p>After about an hour of struggling I finally figured out that Cisco&#8217;s Packet Tracer 6.1 has a bug in it in terms of IPv6 routing. When using the <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ipv6 route</span></code></pre></td></tr></table></div></figure> command, be sure to use an IP address for the destination, not a port address. </p>


<!-- more -->


<p>I created a simple little setup, based on the hands-on lab 14.2 in Todd Lamme
l&#8217;s CCNa book. Three routers, one connected to second which was connected to a t
hird. RouterA&#8212;RouterB&#8212;RouterC. Simple. I turned on ipv6 routing, assigned an
 address, and created IPv6 routes using the outgoing interface. And then no matt
er what I tried, I could not ping between the two subnets. I was able to ping to
 one interface on the middle router, but not to the other interface. I checked f
or mistypes, did the same thing for IPv4 and that worked fine. I couldn&#8217;t find t
he problem at all. So I started to change things, and eventually used the neighboring IP address rather than the interface, and magically things started to work.</p>


<p>So the point is, if you are playing around with IPv6 in Packet Tracer, do this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ipv6 route 2001:db8:3c4d:1::/64 2001:db8:3c4d:2::1</span></code></pre></td></tr></table></div></figure>
rather than this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ipv6 route 2001:db8:3c4d:1::/64 g0/0</span></code></pre></td></tr></table></div></figure>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Removing Event Listeners When Redrawing Canvas]]></title>
    <link href="http://maciejkus.com/blog/2014/09/28/removing-event-listeners-when-redrawing-canvas/"/>
    <updated>2014-09-28T15:43:08-07:00</updated>
    <id>http://maciejkus.com/blog/2014/09/28/removing-event-listeners-when-redrawing-canvas</id>
    <content type="html"><![CDATA[<p>I was drawing a network graph using canvas, it had nodes and edges and when a user clicks on a node the canvas is redrawn. All of this is fine, but then I also wanted to have a navigation bar outside of the canvas which would redraw the canvas when that was clicked. Now redrawing the canvas is easy, but the redraw did not remove the event listeners from the previously drawn canvas. For example, say a node moves to the middle of the graph if it is clicked on. Even if the canvas is redrawn with that node gone, the event listener stayed around and when the user clicked on the section of the canvas where the node used to be, the event would still trigger and the node would be drawn in the middle of the graph. </p>


<!--more-->


<p>The problem came about because the navigation bar was outside of the scope of the canvas function. Even if I turned &#8216;canvas&#8217; into a global variable, &#8216;canvas.removeEventListener&#8217; did not work because the event handler was not a global variable. I could eventually moved enough of the variables into the global scope that maybe things would have worked. &#8216;removeEventListener&#8217; worked fine when I used it inside the canvas function. But luckily the page was already using jQuery, so after playing around and giving up on &#8216;removeEventListener&#8217;, I moved on to use the jQuery &#8216;on()&#8217; and &#8216;off()&#8217; event handler functions. </p>


<p>The reason these worked so well is that using &#8216;off()&#8217; without any arguments removes all event handlers which were added using the &#8216;on()&#8217; function. You cannot mix &#8216;addEventListener&#8217; and &#8216;off()&#8217; together. But anything attached with a &#8216;on()&#8217; was fair game. So all I needed to add to the sidebar was &#8216;$(canvas).off();&#8217; and any event listener attached to the canvas element was removed.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dragging and Switching Images with JavaScript]]></title>
    <link href="http://maciejkus.com/blog/2014/09/21/dragging-and-switching-images-with-javascript/"/>
    <updated>2014-09-21T15:46:14-07:00</updated>
    <id>http://maciejkus.com/blog/2014/09/21/dragging-and-switching-images-with-javascript</id>
    <content type="html"><![CDATA[<p>I needed a simple mechanism to drag and drop images from one place to another on a webpage. Using the HTML5 draggable, ondragstart and ondragover events I made a simple script which allows the user to drag an image, and then drop that image onto another image. The two images then switch positions on the page. The HTML code for each image looks something like this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;img src="imageSource.png" draggable="true" ondragstart="return dragStart(event)" ondragover="return dragOver(event)" ondrop="dragDrop(event)"></span></code></pre></td></tr></table></div></figure>
draggable allows the image to be dragged. This is the default for most browsers when it comes to images, but it cannot hurt to explicitly set it.<br>
ondragstart is triggered when the dragging starts.<br>
ondragover is similar to a mouseover event. It is fired when the mouse is over the event.<br>
ondrop is fired when the mouse button is finally released.
The JavaScript looks like this:</p>


<!-- more -->


<p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">dragSrc</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span> <span class="c1">//used to store the dropped object</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">dragStart</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ev</span><span class="p">.</span><span class="nx">dataTransfer</span><span class="p">.</span><span class="nx">effectAllowed</span><span class="o">=</span><span class="s1">&#39;move&#39;</span><span class="p">;</span> <span class="c1">//allows the object to be moved</span>
</span><span class='line'>  <span class="nx">dragSrc</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">;</span> <span class="c1">//sets the dragged object to be dragSrc</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">dragOver</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//stop default browser action</span>
</span><span class='line'>      <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span> <span class="c1">// Allows us to drop.</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">dragDrop</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ev</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span> <span class="c1">//stops default browser action</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">dragSrc</span> <span class="o">!=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//only if dropping onto another image, not self</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">dragSrc</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">;</span> <span class="c1">//temp variable</span>
</span><span class='line'>      <span class="nx">dragSrc</span><span class="p">.</span><span class="nx">outerHTML</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">;</span> <span class="c1">//sets dragged object to current image</span>
</span><span class='line'>      <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">outerHTML</span> <span class="o">=</span> <span class="nx">x</span><span class="p">;</span> <span class="c1">//set current image to dragged image</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</p>


<p>
This code should work for any kind of HTML, not only a img tag. You can see working demo of this at this <a href='http://subnettingpractice.com/ethernet_wiring.html'>Ethernet wire ordering</a> page. The JavaScript on that page is minified to make it load slightly faster, but you can see what the above is doing.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Webhosting one place email somewhere else]]></title>
    <link href="http://maciejkus.com/blog/2014/09/14/webhosing-one-place-email-somewhere-else/"/>
    <updated>2014-09-14T15:42:25-07:00</updated>
    <id>http://maciejkus.com/blog/2014/09/14/webhosing-one-place-email-somewhere-else</id>
    <content type="html"><![CDATA[<p>A somewhat common problem that comes up at work is users wanting to host their website one place and have their email services go through somewhere else. The main issue is knowing how to setup DNS correctly.</p>


<p>Start with the webhosting. Here you need an A record pointing to the IP address of the webhost. Say you want example.com to be hosted by 192.168.0.1.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>example.com. 86400   IN  A   192.168.0.1</span></code></pre></td></tr></table></div></figure>


<p>Then you need to create an A record for a subdomain which will point at the IP address of the email server you are going to use. Lets say the email server is on 10.0.0.2.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mail.example.com.    86400   IN  A   10.0.0.2</span></code></pre></td></tr></table></div></figure>


<p>I use the &#8216;mail&#8217; prefix, but this could be any subdomain that is not being used. Now you must create a MX record which tells emails that are sent to @example.com where to go. For this you will point the top level domain to the newly created subdomain. A common mistake is to try to point the MX record to an IP address. An MX record must point to an A record.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>example.com. 86400   IN  MX  10 mail.example.com.</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it. Now any requests, such as a HTTP request, looking for example.com will be sent to 192.168.0.1 and any email sent to @example.com will be forwarded on to mail.example.com which goes to 10.0.0.2.</p>


<p>The above can and probably should also be done with IPv6 when IPv6 addresses are available. For that just add AAAA records in the same maner as the A records above. You will need one AAAA record for example.com pointing to the webhosting IPv6 address, and one AAAA record pointing mail.example.com pointing to the mail server&#8217;s IPv6 address.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Middle East game]]></title>
    <link href="http://maciejkus.com/blog/2014/08/30/middle-east-game/"/>
    <updated>2014-08-30T15:22:19-07:00</updated>
    <id>http://maciejkus.com/blog/2014/08/30/middle-east-game</id>
    <content type="html"><![CDATA[<p>I wrote a little turn based game. It is inspired by American involvement in the Middle East. The idea is you are newly elected President Obama. You inherited two wars. What actions will you take in the Middle East?</p>


<p>Since 2008 the Middle East has seen a dramatic change in political aliances. The Arab Spring had a huge impact on the regoin. Recently the Hamas and Israel conflict showed just how profound that impact has been. Egypt and other Arab countries were more inclined to ally with Israel than they were with Islamic Hamas. That is just a single example of how dynamic the Middle East is.</p>


<p>The game starts somewhat realistically to what Obama found when he became president. “With the 2008 election of Barack Obama, favorable attitudes toward the U.S. more than doubled in many Arab countries.” (<a href='http://www.aaiusa.org/reports/arab-attitudes-2011'>aaiusa</a>) I used a number of sources for the game. These include:</p>


<p><a href="http://en.wikipedia.org/wiki/United_States_Foreign_Military_Financing">http://en.wikipedia.org/wiki/United_States_Foreign_Military_Financing</a><br>
<a href="http://midknightgraphs.blogspot.com/2011/02/sunnishia-demographics-in-middle-east.html">http://midknightgraphs.blogspot.com/2011/02/sunnishia-demographics-in-middle-east.html</a><br>
<a href="http://trade.gov/press/publications/newsletters/ita_0408/middle-east_0408.asp">http://trade.gov/press/publications/newsletters/ita_0408/middle-east_0408.asp</a><br>
<a href="http://gbk.eads.usaidallnet.gov/data/country.html">http://gbk.eads.usaidallnet.gov/data/country.html</a><br>
Fragile State Index: <a href="http://ffp.statesindex.org/rankings-2008-sortable">http://ffp.statesindex.org/rankings-2008-sortable</a><br>
<a href="http://gbk.eads.usaidallnet.gov/data/country.html">http://gbk.eads.usaidallnet.gov/data/country.html</a><br>
<a href="http://graphics.eiu.com/PDF/Democracy%20Index%202008.pdf">http://graphics.eiu.com/PDF/Democracy%20Index%202008.pdf</a><br>
<a href="http://www.aaiusa.org/page/-/Polls/ArabOpinion/Obama100Days_SixNationSurvey_2009.pdf">http://www.aaiusa.org/page/-/Polls/ArabOpinion/Obama100Days_SixNationSurvey_2009.pdf</a> and <a href="http://www.pewglobal.org/2013/07/18/chapter-1-attitudes-toward-the-united-states/">http://www.pewglobal.org/2013/07/18/chapter-1-attitudes-toward-the-united-states/</a><br></p>

<p>The code can be found on github. Play the <a href='http://maciejkus.com/middle-east-diplomacy/'>game</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple HTML5 Games]]></title>
    <link href="http://maciejkus.com/blog/2014/08/04/simple-html5-games/"/>
    <updated>2014-08-04T10:39:21-07:00</updated>
    <id>http://maciejkus.com/blog/2014/08/04/simple-html5-games</id>
    <content type="html"><![CDATA[<p>
A while ago I wanted to work with graphics. Before then all I have ever coded were text based programs. Calculators, problem generators, text games, console scripts, etc. I figured a game would be the best way to do this and that HTML5/canvas would be the best area to learn. Internet browsers have largely adopted canvas and it works on all kinds of devices, including smart phones. I hope posting these early experiments will allow others to speed up their own learning of HTML5/canvas. 
</p>


<p>A coworker suggested I start with making a breakout style game and then move on to pong. My first step was to actually learn how to draw a <a href='../../../../../html5-games/ball_shadow.html'>circle</a>. Then how to move the circle. Once I got that down the rest was easy.
</p>


<!-- more -->


<p>OK, maybe not easy, but there is enough documentation out there that I was able to make  some simple graphical programs. Rather than dive right into breakout I made a little &#8216;game&#8217; where balls simply bounce around in two &#8216;rooms&#8217;. This was largely a way to practice collision detection and collision response before making a more advanced game. The result can be played <a href='../../../../../html5-games/click-balls.html'>here</a>. The collision response in the game is definitely lacking, but it worked well enough for me to feel like I understood how things should work.
</p>


<p>
After that I felt like I understood collisions well enough that I did not need to make a breakout game and instead could move straight to a pong game, which is what I did. Instead of regular pong I made it more of a wall-ball style game where both players are on the same side. It&#8217;s pretty much pong, with a tiny difference. See it in action <a href='../../../../../html5-games/wallball.html'>here</a>.
</p>


<p>
Finally, I wanted something more advanced, so I made a space shooter game. Instead of trying to use sprites I just used basic canvas shapes like circles, but the idea works pretty well. Play it <a href='../../../../../html5-games/shooter.html'>here</a>.
</p>


<p>
The above three were all learning experiences, and I believe I could go through the code and make it a bit nicer and maybe more efficient today. I am posting them as I originally wrote them. No improvments or anything, but I found that looking at how other simple games were coded was very helpful. Hopefully looking at the page source for the above might be helpful for others who are starting out. 
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Record Collector The Game]]></title>
    <link href="http://maciejkus.com/blog/2014/08/02/record-collector-the-game/"/>
    <updated>2014-08-02T13:41:01-07:00</updated>
    <id>http://maciejkus.com/blog/2014/08/02/record-collector-the-game</id>
    <content type="html"><![CDATA[<p>Record Collector is a simple game I made using the <a href='http://enchantjs.com/'>enchant.js</a> game engine. It was largely an exercise in JavaScript and using a game engine, but I also wanted to add my own flavor to the incremental game genre. Most incremental games are text and box based, where you click buttons or objects. In Record Collector you control a hero who walks around and interacts with other characters while trying to get more records.</p>


<p>I chose enchant.js because it was small and simple. I did not want a framework that would do all the work for me. I meant this to be a learning experience for myself, and it was. I never made a game more advanced than pong before this. Here I had to not only code the game, but also design the game play and the graphics (my apologies. I am clearly not an artist.) Enchant helped me create the map and I was able to avoid writing my own collision detection function. But by and large the game is my own creation.</p>


<!-- more -->


<p>The biggest challenge while creating the game may have been to make the map and sprites scroll correctly while the hero moved around. Moving the hero around requires the game to look at the hero&#8217;s current position (x and y), the last mouse click and the speed at which the hero walks. First I check to make sure that the mouse click is close enough to the hero that the hero does not really have to walk. If the distance between the mouse click and the current hero&#8217;s position is less than the hero&#8217;s walking speed I just move the hero the the mouse-click position. If the mouse-click is further away, I check a number of things. I see how close the hero is to the current edge or the map. If he is one third of the way to the edge of the direction he will be walking then I will scroll the background. I also check to make sure that there is more background to scroll into. Maybe the map has ended, in which case there is no need for further scrolling. I also make sure that there are no collisions with walls in the direction the hero is trying to move. If all of the above checks, then I change the background position (x and/or y) to make the background scroll, and then I change the position of the mouse-click to bring it closer to the position of the hero. The hero&#8217;s x and y positions do not change in this case because the hero&#8217;s sprite does not actually move relative to the window. It is the background that is moving and bringing the mouse-click point closer to the hero.
</p>


<p>If all the above checks failed, then that means I am probably near the edge of a map. There is probably no more background left to scroll. In this case I leave the background and the mouse-click points alone and I move the hero&#8217;s sprite. I also check for collision with walls one last time, and if a collision occurs, I undo the hero&#8217;s move.</p>


<p></p>

<p>The code is a bit hard to read as I have some magic numbers in there to make collisions with walls look better. But it goes something like this:

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//moving hero down</span>
</span><span class='line'><span class="nx">hero</span><span class="p">.</span><span class="nx">dir</span> <span class="o">=</span> <span class="nx">DIR_DOWN</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">hero</span><span class="p">.</span><span class="nx">toY</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nx">heroSpeed</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">hero</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">hero</span><span class="p">.</span><span class="nx">toY</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">game</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span><span class="p">(</span><span class="nx">game</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">floor</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="nx">floor</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">game</span><span class="p">.</span><span class="nx">height</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">hitTest</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">offx</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span> <span class="nx">hero</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">offy</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">y</span><span class="p">))</span> <span class="o">===</span> <span class="kc">false</span><span class="p">)){</span>
</span><span class='line'>  <span class="nx">floor</span><span class="p">.</span><span class="nx">y</span> <span class="o">-=</span> <span class="nx">heroSpeed</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">hero</span><span class="p">.</span><span class="nx">toY</span> <span class="o">-=</span><span class="nx">heroSpeed</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">hero</span><span class="p">.</span><span class="nx">y</span> <span class="o">+=</span><span class="nx">heroSpeed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">hitTest</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">offx</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span> <span class="nx">hero</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">offy</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">floor</span><span class="p">.</span><span class="nx">y</span><span class="p">)))</span> <span class="nx">hero</span><span class="p">.</span><span class="nx">y</span> <span class="o">-=</span><span class="nx">heroSpeed</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure> 
</p>


<p>
One other implementation that I had to think about was what to do about collisions. Enchant.js does a good job of making collision detection easy, but when the hero collides with another character in the game I wanted the dialogue box to pop up only a single time per collision. This was solved with having the none player characters all having a &#8216;hit&#8217; property. So first the game checks for a collision, and if there is a collision it checks to make sure that the hit property is set to false. If it is set to false, then the dialogue box is rendered and the hit property is set to true. The hit property stays true until the collision no longer exists. If there is no collision then the hit property is set to false again. This is the code that loops through all the characters to see if they have collided with the hero. 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">npcLength</span> <span class="o">=</span> <span class="nx">npcArray</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">npcLength</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'> <span class="kd">var</span> <span class="nx">curNpc</span> <span class="o">=</span> <span class="nx">npcArray</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'> <span class="k">if</span><span class="p">(</span><span class="nx">hero</span><span class="p">.</span><span class="nx">within</span><span class="p">(</span><span class="nx">curNpc</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span> <span class="c1">//number  is radius of collision</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">curNpc</span><span class="p">.</span><span class="nx">hit</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">checkStats</span><span class="p">();</span> <span class="c1">//checks and makes needed dialogue updates</span>
</span><span class='line'>     <span class="nx">game</span><span class="p">.</span><span class="nx">pushScene</span><span class="p">(</span><span class="nx">game</span><span class="p">.</span><span class="nx">makeDialogueScene</span><span class="p">(</span><span class="nx">curNpc</span><span class="p">.</span><span class="nx">dialogue</span><span class="p">));</span> <span class="c1">//adds dialogue box</span>
</span><span class='line'>     <span class="nx">curNpc</span><span class="p">.</span><span class="nx">hit</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">curNpc</span><span class="p">.</span><span class="nx">hit</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure> 
</p>


<p>
The game can be played <a href='../../../../../record-collector/'>here</a> and the code can be seen <a href='https://github.com/MaciejKus/record_collector'>here</a>. Next game I make will have better graphics, I promise.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Best Subnetting Site]]></title>
    <link href="http://maciejkus.com/blog/2014/07/27/the-best-subnetting-site/"/>
    <updated>2014-07-27T14:08:58-07:00</updated>
    <id>http://maciejkus.com/blog/2014/07/27/the-best-subnetting-site</id>
    <content type="html"><![CDATA[<p>I recently began to study for the CCNA. I am taking my sweet time with it, mostly because I have instead ended up working on improving my JavaScript skills. One way I combined the two was by creating a <a href='http://subnettingpractice.com'>subnetting practice</a> website. I found existing subnetting sites to be lacking. They were mostly text based with the same nine or so question types repeated over and over. These questions do little to teach someone when and why to actually use subnetting. They make sure the student knows how to calculate a subnet mask, but not how to implement that knowledge when given a network diagram. The site I created uses graphical questions and diagrams along with text based questions to make sure the learner knows how to calculate things like the network mask, but also knows when and why to calculate it.</p>


<!-- more -->


<p>I built the site from scratch. Originally I was going to only create the subnetting practice section of the site, but soon I realized that to write the type of questions I was wanting to write I would need to program a way to calculate variable length subnet mask (VLSM) subnetting, so I wrote a <a href='http://subnettingpractice.com/vlsm.html'>VLSM calculator</a>. Once I had this coded, I was able to create VLSM style questions. </p>


<p>The Internet is moving towards IPv6 implementation and the CCNA is beginning to reflect that with IPv6 questions being added to the test. Because of this I added some fairly basic (but more than one should need for the CCNA) <a href=http://subnettingpractice.com/ipv6.html>IPv6 questions</a>. There are a number of other features, including exponent practice, basic subnetting practice, and interactive view of how large IPv6 is, and IPv6 and IPv4 calculators.</p>


<p>I find the sit to be useful, both in making sure my subneting is accurate and quick and in checking my work with the calculators. It&#8217;s nice to code something that is of value to me and others.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Octopress]]></title>
    <link href="http://maciejkus.com/blog/2014/07/26/setting-up-octopress/"/>
    <updated>2014-07-26T12:13:08-07:00</updated>
    <id>http://maciejkus.com/blog/2014/07/26/setting-up-octopress</id>
    <content type="html"><![CDATA[<p>This site is powered by Octopress. Octopress is a static site generator. I am still working on getting things to look just how I want, but I am pretty happy so far. For a website I want something simple and to the point. I want content to be the first thing a visitor sees. </p>


<p>A lot of webpages, especially those that use Twitter Bootstrap hide the content. Instead when visiting a page the user is greeted with a full-screen image or graphic of some kind. Usually the user is expected to scroll down to view the actual content of the site, and even then instead of content the site is filled with links and more images. This may be impressive the first time one sees such a  page, but usually I am looking for information and not pretty graphics. I hope my site remains simple and content is accessible. Users should never feel like they have to search  through a site to find content. </p>


<!-- more -->


<p>With all that in mind, I did have a couple issues when setting up Octopress. First, when installing either the default theme or the <a href ='https://github.com/shashankmehta/greyshade'>Greyshade</a> theme which I ended up using, I received the following errors:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:rake install
</span><span class='line'>rake aborted!
</span><span class='line'>LoadError: cannot load such file -- stringex
</span><span class='line'>/var/www/maciej/octopress/Rakefile:3:in `require'
</span><span class='line'>/var/www/maciej/octopress/Rakefile:3:in `&lt;top (required)>'
</span><span class='line'>(See full trace by running task with --trace)</span></code></pre></td></tr></table></div></figure>
and
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install['greyshade'] --trace
</span><span class='line'>rake aborted!
</span><span class='line'>LoadError: cannot load such file -- stringex
</span><span class='line'>/var/www/maciej/maciejkus925.github.io/octopress/Rakefile:3:in `require'
</span><span class='line'>/var/www/maciej/maciejkus925.github.io/octopress/Rakefile:3:in `&lt;top (required)>'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/rake_module.rb:28:in `load'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/rake_module.rb:28:in `load_rakefile'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:687:in `raw_load_rakefile'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:94:in `block in load_rakefile'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:176:in `standard_exception_handling'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:93:in `load_rakefile'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:77:in `block in run'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:176:in `standard_exception_handling'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/lib/rake/application.rb:75:in `run'
</span><span class='line'>/var/lib/gems/1.9.1/gems/rake-10.3.2/bin/rake:33:in `&lt;top (required)>'
</span><span class='line'>/usr/local/bin/rake:23:in `load'
</span><span class='line'>/usr/local/bin/rake:23:in `&lt;main>'</span></code></pre></td></tr></table></div></figure>

The issue ended up being that my Gemfile was pointing to an old version of stringex. To get things working I changed my Gemfile from
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'stringex', '~> 1.4.0'</span></code></pre></td></tr></table></div></figure>
to
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'stringex', '~> 2.5.2'</span></code></pre></td></tr></table></div></figure>
</p>


<p>The second issue was that when I moved the default index.html file to blog/index.html as described on the Octopress <a href='http://octopress.org/docs/theme/template/'>website</a> blog/index.html would show up blank. There was no blog entries being listed on the page. When I moved the file back to the home directory the most recent blog posts once again showed up. The fix was to update _config.yml and set 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>paginate_path: "posts/:num"</span></code></pre></td></tr></table></div></figure>
to 
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>paginate_path: "blog/posts/:num"</span></code></pre></td></tr></table></div></figure>
It&#8217;s a simple step that the Octopress documentation did not mention.</p>


<p>Beyond that, the setup was pretty painless.</p>

]]></content>
  </entry>
  
</feed>
