<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Maciej Kus is not a Figure Skater]]></title>
  <link href="http://maciejkus.com/atom.xml" rel="self"/>
  <link href="http://maciejkus.com/"/>
  <updated>2015-09-29T09:51:21-07:00</updated>
  <id>http://maciejkus.com/</id>
  <author>
    <name><![CDATA[Maciej Kus]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Canvas Match 3 Game]]></title>
    <link href="http://maciejkus.com/blog/2015/09/29/canvas-match-3-game/"/>
    <updated>2015-09-29T09:39:45-07:00</updated>
    <id>http://maciejkus.com/blog/2015/09/29/canvas-match-3-game</id>
    <content type="html"><![CDATA[<p>I decided to make a match three game as a first step to learning a new game engine. Since Enchant.js is pretty much abandoned at this point, I figured it was time to try something new, and I decided on Phaser.js. So I start making the game, but it just seems that using a game engine was overkill for something as simple as a match-three game.</p>

<p>So I decided to save learning Phaser.js for a different project and just make the match-three game using plain old vanilla JavaScript and the html5 canvas element. Play it <a href='http://brogress.smoothiegains.com/smoothie_match/'>here</a>.</p>

<!-- more -->


<p>The coolest thing about making the game was dealing with all the animations. I split up the animations to only render the tile which is moving, instead of rendering the whole canvas every time something has to be changed. This saves a lot of resources, making the game run faster and smoother. The trick was to make sure that things didn&rsquo;t overlap.  The animations run asynchronously, so I had to avoid situations where multiple animations were running on top of one another, or that the logic from a running animation did not interfere with the logic of a new mouse click.</p>

<p>The game is pretty basic, but I was able to remove all the little glitches I came across when testing. I&rsquo;m also pleased to have made a game where the graphics actually look OK. This is all thanks to finding creative commons images and playing with GIMP a little bit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Searchable-Reddit-Brogress]]></title>
    <link href="http://maciejkus.com/blog/2015/09/06/searchable-reddit-brogress/"/>
    <updated>2015-09-06T11:16:17-07:00</updated>
    <id>http://maciejkus.com/blog/2015/09/06/searchable-reddit-brogress</id>
    <content type="html"><![CDATA[<p>Reddit has a number of fitness progress picture communities. The problem is there is no good way to search through the posts. A lot of the posts are either people trying to lose weight, or 16 year olds who gain 30 pounds of muscle in 3 months. I am not interested in losing weight, nor do I have the raging growth hormones of a teenager.</p>

<p>I wanted to be able to search through the posts to find photos of people similar to me in height and weight so I could have a realistic fitness goal to strive for when I go to the gym. So, using angularJS I made my own.</p>

<p>I present the world with a <a href='http://brogress.smoothiegains.com/'>searchable fitness photo</a> web app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wage-calc]]></title>
    <link href="http://maciejkus.com/blog/2015/09/05/wage-calc/"/>
    <updated>2015-09-05T17:18:07-07:00</updated>
    <id>http://maciejkus.com/blog/2015/09/05/wage-calc</id>
    <content type="html"><![CDATA[<p>A <a href='http://maciejkus.com/wage-calculator/'>wage calculator</a> which calculates inflation, top CEO compensation, S&amp;P 500, and San Francisco real estate growth. See if r is greater than g in the short term.</p>

<p>The chart was made using chart.js</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[memoization]]></title>
    <link href="http://maciejkus.com/blog/2015/08/21/memoization/"/>
    <updated>2015-08-21T13:59:37-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/21/memoization</id>
    <content type="html"><![CDATA[<p>It&rsquo;s pretty amazing how much faster caching makes code. I was doing a CodeWars exercise trying to go through an array and find the first (left most) pair of numbers which add up to a given sum (<code>s</code>). I first tried:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>  for(var i = 1, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    for (var x = 0; x &lt; i; x++) {
</span><span class='line'>      if(ints[i] + ints[x] === s) return [ints[x],ints[i]];
</span><span class='line'>    }
</span><span class='line'>  }   
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Pretty self explanatory, it goes through the array and for every number goes through all the numbers before that one to see if they add up to the sum. It works, but was too slow and timed out when the array was huge.</p>

<p>I tried to speed things up a bit by using indexOf() rather than a second for loop, but that actually slowed things down, as indexOf() is like a loop, but with a bunch of checks included in it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>  for(var i = 1, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    var otherIndex = ints.indexOf(s - ints[i])
</span><span class='line'>    if(otherIndex &gt; -1 && otherIndex &lt; i) return [(s - ints[i]),ints[i]];
</span><span class='line'>  }   
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>I then thought about caching or memoization, and that is where the solution lay. Basically, the trick is to create a JavaScript object which holds all the values which have already been seen in the <code>ints</code> array.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var pairs=function(ints, s){
</span><span class='line'>//variable to hold numbers already checked
</span><span class='line'>var cached = {};
</span><span class='line'>  for(var i = 0, j= ints.length; i &lt; j; i++) {
</span><span class='line'>    var num = ints[i];
</span><span class='line'>    //the value needed to form a pair
</span><span class='line'>    var num2 = s - num;
</span><span class='line'>    //if have seen num2 already 
</span><span class='line'>    //then this is the answer
</span><span class='line'>    if(num2 in cached) {
</span><span class='line'>      return [num2,num];
</span><span class='line'>    //add num2 to cache
</span><span class='line'>    } else {
</span><span class='line'>      cached[num] = 1;
</span><span class='line'>    }
</span><span class='line'>  }   
</span><span class='line'>  //no pair found
</span><span class='line'>  return undefined;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tdee-calculator]]></title>
    <link href="http://maciejkus.com/blog/2015/08/16/tdee-calculator/"/>
    <updated>2015-08-16T16:43:58-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/16/tdee-calculator</id>
    <content type="html"><![CDATA[<p>A <a href="http://smoothiegains.com/tdee-and-bmr-calculator/">TDEE and BMR calculator</a> helps measure how many calories are needed to gain or lose weight. The inputs include exercise levels, age and body description.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jsbreakouts]]></title>
    <link href="http://maciejkus.com/blog/2015/08/11/jsbreakouts/"/>
    <updated>2015-08-11T09:12:00-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/11/jsbreakouts</id>
    <content type="html"><![CDATA[<p>There&rsquo;s a project, JavaScript <a href="http://www.jsbreakouts.org/">Breakouts</a> which is a collection of different JavaScript game engines. All the game engines are used to create the same version of Breakout, with the same features, etc. It&rsquo;s a way to allow people to compare different game engines by looking at them in action.</p>

<p>Since I&rsquo;ve used enchant.js before, I figured I would add an enchant.js version to the Breakouts. The game can be played <a href="http://www.jsbreakouts.org/enchantjs/index.html">here</a>. Coding this game I realized that enchant.js is out of date. The last time it has been updated was around 2013. There was one <a href="https://github.com/wise9/enchant.js/issues/312">issue</a> where I actually had to go in and change the code for enchant.js to make the game work. There is an outdated web audio line:</p>

<p><code>this.src.disconnect(this.connectTarget);</code></p>

<p>This caused Chrome and other webkit based browsers to issue a</p>

<p><code>Uncaught InvalidAccessError: Failed to execute 'disconnect' on 'AudioNode': the given destination is not connected.</code></p>

<p>error. This was fixed by changing the above line to</p>

<p><code>this.src.disconnect();</code></p>

<p>Before this change, the game would crash as soon as a sound was played. I see there are other issues with enchant.js. On older versions of Firefox the game does not finish loading. Instead it throws a</p>

<p><code>Error: failed in Deferred</code></p>

<p>error. It&rsquo;s unfortunate, but it seems like enchant.js is no longer being maintained, and so I will have to find a new game engine to use, if I ever decide to use a game engine for a game.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Canvas Breakout]]></title>
    <link href="http://maciejkus.com/blog/2015/08/04/canvas-breakout/"/>
    <updated>2015-08-04T09:24:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/08/04/canvas-breakout</id>
    <content type="html"><![CDATA[<p>Continuing with the Canvas/JavaScript game theme that I&rsquo;ve been on recently, I just coded a game of <a href="http://maciejkus.com/breakout/">Breakout</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Canvas/HTML5 Tower Defense]]></title>
    <link href="http://maciejkus.com/blog/2015/07/06/canvas-tower-defense/"/>
    <updated>2015-07-06T17:30:41-07:00</updated>
    <id>http://maciejkus.com/blog/2015/07/06/canvas-tower-defense</id>
    <content type="html"><![CDATA[<p>I made a fairly simply tower defense game in html5/canvas/javascript. It works fine as is. Most of the features I would want to create are there, the game just needs some work on the actual game play. Details like the cost of towers, and how rapid the attackers are spawned will probably need to be changed to make the game more enjoyable. The current version works well enough to play.</p>

<p>Check it out at <a href="http://maciejkus.com/tower/">http://maciejkus.com/tower/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[snake]]></title>
    <link href="http://maciejkus.com/blog/2015/06/26/snake/"/>
    <updated>2015-06-26T15:20:57-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/26/snake</id>
    <content type="html"><![CDATA[<p>Snake, the classic game, now in html5/Canvas: <a href="http://maciejkus.com/snake/">http://maciejkus.com/snake/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unit-vector-eyes-follow-mouse]]></title>
    <link href="http://maciejkus.com/blog/2015/06/23/unit-vector-eyes-follow-mouse/"/>
    <updated>2015-06-23T17:11:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/23/unit-vector-eyes-follow-mouse</id>
    <content type="html"><![CDATA[<p>A unit vector or normal vector is useful for pointing things at other things. Like pointing eyes at a mouse. See here what a unit vector is:
<a href="https://en.wikipedia.org/wiki/Unit_vector">https://en.wikipedia.org/wiki/Unit_vector</a></p>

<p>and then check out <a href="http://maciejkus.com/unit-vector-eyes/">http://maciejkus.com/unit-vector-eyes/</a> to see some html5/canvas eyes which follow your mouse cursor. They currently only follow the mouse when it is inside the canvas element, but this can easily be changed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[angular_forum]]></title>
    <link href="http://maciejkus.com/blog/2015/06/22/angular-forum/"/>
    <updated>2015-06-22T14:46:04-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/22/angular-forum</id>
    <content type="html"><![CDATA[<p>Welp, I made a simple forum using angularJS. This is a lot more of what angular was meant to do than that baseball game I made a bit ago. It&rsquo;s a simple single page app. I did not create any backend functionality to save the posts or anything like that, partly because it is just an exercise, and partly because github   pages do not have backend access.</p>

<!--more-->


<p>You can see it at <a href="http://maciejkus.com/angular-forum/">http://maciejkus.com/angular-forum/</a>
You can make new posts, you can click on a username to see post titles made by that user. Nothing too fancy but it covers a lot of angular ideas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[box_whiskers_calc]]></title>
    <link href="http://maciejkus.com/blog/2015/06/20/box-whiskers-calc/"/>
    <updated>2015-06-20T12:30:32-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/20/box-whiskers-calc</id>
    <content type="html"><![CDATA[<p> There is a shocking lack of box and whisker graph calculators on the Internet. Well, accurate ones anyway, so I made one. Originally I needed one for some calculations I was doing and made one in Python, but then I figured I can easily rewrite it into Javascript and make it available for others. I even added a simple HTML5 canvas graph. You can find it at <a href="http://maciejkus.com/box_whiskers/">Box and Whiskers Calculator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[angular-baseball-game]]></title>
    <link href="http://maciejkus.com/blog/2015/06/05/angular-baseball-game/"/>
    <updated>2015-06-05T12:40:07-07:00</updated>
    <id>http://maciejkus.com/blog/2015/06/05/angular-baseball-game</id>
    <content type="html"><![CDATA[<p>Inspired by a Codewars kata I created a simple <a href="http://maciejkus.com/baseball-game/">baseball game</a>. It was the first time I used AngularJS, but I feel like the Angular was unnecessary. I will need to build a few other pages to get the full idea of Angular.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bicycle or Walk]]></title>
    <link href="http://maciejkus.com/blog/2015/05/26/bicycle-or-walk/"/>
    <updated>2015-05-26T14:40:11-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/26/bicycle-or-walk</id>
    <content type="html"><![CDATA[<p>Playing around with Bootstrap a tiny bit more I made a little <a href="http://maciejkus.com/bike-drive/">bicycle versus driving</a> app. It&rsquo;s pretty simple in terms of the data that is shows. I used google maps and tabs, which do not get along very well, but luckily others have run into this problem in the past and there is a fair amount of recommendations out there.</p>

<!-- more -->


<p>My app was unique because I use two separate tabs for two separate maps, and I want to load dynamic directions when the maps are presented. All the existing code I found only focused on a single map which did not have directions on it. After a bit, I was able to make things work the way I wanted them to.</p>

<p>I also used an API feed from myGasFeed.com. Playing with two separate APIs was a nice reminder of the asynchronous nature of AJAX.</p>

<p>I feel really comfortable with Bootstrap at this point. Time to find something new to experiment with?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[asset allocation bootstrap]]></title>
    <link href="http://maciejkus.com/blog/2015/05/16/asset-allocation-bootstrap/"/>
    <updated>2015-05-16T10:39:03-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/16/asset-allocation-bootstrap</id>
    <content type="html"><![CDATA[<p>Another bootstrap project is the <a href='http://maciejkus.com/asset-allocation/'>asset allocation calculator</a> I created. The JavaScript is mostly simple math and there&rsquo;s some jQuery to create and remove fields. Thanks to bootstrap the page is responsive, works well across browsers and looks pretty.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Star Wars Crawler]]></title>
    <link href="http://maciejkus.com/blog/2015/05/09/star-wars-crawler/"/>
    <updated>2015-05-09T15:08:23-07:00</updated>
    <id>http://maciejkus.com/blog/2015/05/09/star-wars-crawler</id>
    <content type="html"><![CDATA[<p>Inspired by <a href="http://www.sitepoint.com/css3-starwars-scrolling-text/">http://www.sitepoint.com/css3-starwars-scrolling-text/</a> I created A Star Wars themed &lsquo;about&rsquo; page. See it here: <a href="http://maciejkus.com/starwars/">http://maciejkus.com/starwars/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap is the best]]></title>
    <link href="http://maciejkus.com/blog/2015/04/28/bootstrap/"/>
    <updated>2015-04-28T15:35:33-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/28/bootstrap</id>
    <content type="html"><![CDATA[<p>I took a quick little Bootstrap course online through edx. I then made a simple little band website using Bootstrap here: <a href="http://maciejkus.com/we-are-the-best/">We are the Best</a>. It is a fan site for the punk rock band in the Swedish film <em>We are the Best</em>. Practice Practice Practice, it&rsquo;s all one can do to learn.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Design]]></title>
    <link href="http://maciejkus.com/blog/2015/04/25/responsive-design/"/>
    <updated>2015-04-25T15:16:46-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/25/responsive-design</id>
    <content type="html"><![CDATA[<p>Responsive design in the idea that a webpage will respond to and accommodate the width of a browser. What this means is that if you are looking at a website on a small screen, such as those found in smart phones, the page will adjust to fit that small screen. Usually things that happen is the line height and font increase and the layout of the page becomes more vertical. Elements line up on top of one another rather than to the left or right of one another.</p>

<p>My job&rsquo;s main webpage was designed years ago, well before mobile phones were widely used to browse the Internet. The webpage still works fine and the belief is that there is little reason to change the site. All the information that customers and potential customers may need can be easily found. However, up until a week ago the site looked pretty terrible on mobile devices. This was a problem, especially since Google was going to start punishing non-mobile friendly sites in its search results.</p>

<p>I took a look at the existing CSS and realized I can make the site responsive. So I added some CSS media queries, removed some inline CSS, changed a tiny bit of html, and bam! Now on a desktop or wider screen the site looks exactly like it used to, but on a smaller screen or on a mobile phone the layout of the site is a lot more vertical and user friendly.</p>

<!--more-->


<p>Making an existing page responsive is not too difficult. Most of the challenge revolves around understanding the existing CSS. First you want to understand what the page is doing and why it is doing it, and then you will be able to move elements around without breaking everything. The basic ideas are, make lots of elements have a width of 100%. This ensures elements are stacked vertically. Be sure to keep line heights larger than you would on a desktop, this is especially true for links. Hard to press links create a crummy user experience. &lsquo;Max-width&rsquo; is your friend. This is especially true for images.</p>

<p>I didn&rsquo;t want to touch the existing HTML when I could help it, but there were a couple things I just couldn&rsquo;t help but touch up. On one page there was an empty table element which was used to create whitespace. I was easily able to remove this element and add the whitespace with CSS. It is considered best practice to separate the content of a page (HTML) from the design of the page (CSS). I also had to add a couple of classes to some HTML elements, but that doesn&rsquo;t affect anything in terms of the way the page looks.</p>

<p>It was a neat little project, working with HTML and CSS that I originally had nothing to do with and trying to make the page work great on small screens while not changing anything on the desktop version. I remember the first time I tried to do anything with CSS I hated it, but now I realize that was because I was unfamiliar with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux is cool]]></title>
    <link href="http://maciejkus.com/blog/2015/04/13/linux-is-cool/"/>
    <updated>2015-04-13T14:46:23-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/13/linux-is-cool</id>
    <content type="html"><![CDATA[<p>I like wget and sed. Want to download a whole website?</p>

<pre><code>wget -r --no-parent http://example.com/
</code></pre>

<p>Want to insert the test of input.txt after the head tag into all html files?</p>

<pre><code>sed -i '/&lt;head&gt;/r input.txt' *.html
</code></pre>

<p>Tools like these make life so easy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Site]]></title>
    <link href="http://maciejkus.com/blog/2015/04/04/new-site/"/>
    <updated>2015-04-04T15:08:12-07:00</updated>
    <id>http://maciejkus.com/blog/2015/04/04/new-site</id>
    <content type="html"><![CDATA[<p>So I&rsquo;m playing with Wordpress for a <a href="http://smoothiegains.com/">smoothie and fitness</a> site. I do love drinking smoothies so it should be fun to post some of my favorite recipes on there.</p>
]]></content>
  </entry>
  
</feed>
